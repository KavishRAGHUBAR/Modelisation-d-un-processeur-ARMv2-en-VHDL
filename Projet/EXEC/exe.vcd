$date
  Fri Dec 23 11:43:43 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 1 ! dec2exe_empty $end
$var reg 1 " exe_pop $end
$var reg 32 # dec_op1[31:0] $end
$var reg 32 $ dec_op2[31:0] $end
$var reg 4 % dec_exe_dest[3:0] $end
$var reg 1 & dec_exe_wb $end
$var reg 1 ' dec_flag_wb $end
$var reg 32 ( dec_mem_data[31:0] $end
$var reg 4 ) dec_mem_dest[3:0] $end
$var reg 1 * dec_pre_index $end
$var reg 1 + dec_mem_lw $end
$var reg 1 , dec_mem_lb $end
$var reg 1 - dec_mem_sw $end
$var reg 1 . dec_mem_sb $end
$var reg 1 / dec_shift_lsl $end
$var reg 1 0 dec_shift_lsr $end
$var reg 1 1 dec_shift_asr $end
$var reg 1 2 dec_shift_ror $end
$var reg 1 3 dec_shift_rrx $end
$var reg 5 4 dec_shift_val[4:0] $end
$var reg 1 5 dec_cy $end
$var reg 1 6 dec_comp_op1 $end
$var reg 1 7 dec_comp_op2 $end
$var reg 1 8 dec_alu_cy $end
$var reg 2 9 dec_alu_cmd[1:0] $end
$var reg 32 : exe_res[31:0] $end
$var reg 1 ; exe_c $end
$var reg 1 < exe_v $end
$var reg 1 = exe_n $end
$var reg 1 > exe_z $end
$var reg 4 ? exe_dest[3:0] $end
$var reg 1 @ exe_wb $end
$var reg 1 A exe_flag_wb $end
$var reg 32 B exe_mem_adr[31:0] $end
$var reg 32 C exe_mem_data[31:0] $end
$var reg 4 D exe_mem_dest[3:0] $end
$var reg 1 E exe_mem_lw $end
$var reg 1 F exe_mem_lb $end
$var reg 1 G exe_mem_sw $end
$var reg 1 H exe_mem_sb $end
$var reg 1 I exe2mem_empty $end
$var reg 1 J mem_pop $end
$var reg 1 K ck $end
$var reg 1 L reset_n $end
$var reg 1 M vdd $end
$var reg 1 N vss $end
$scope module exec $end
$var reg 1 O dec2exe_empty $end
$var reg 1 P exe_pop $end
$var reg 32 Q dec_op1[31:0] $end
$var reg 32 R dec_op2[31:0] $end
$var reg 4 S dec_exe_dest[3:0] $end
$var reg 1 T dec_exe_wb $end
$var reg 1 U dec_flag_wb $end
$var reg 32 V dec_mem_data[31:0] $end
$var reg 4 W dec_mem_dest[3:0] $end
$var reg 1 X dec_pre_index $end
$var reg 1 Y dec_mem_lw $end
$var reg 1 Z dec_mem_lb $end
$var reg 1 [ dec_mem_sw $end
$var reg 1 \ dec_mem_sb $end
$var reg 1 ] dec_shift_lsl $end
$var reg 1 ^ dec_shift_lsr $end
$var reg 1 _ dec_shift_asr $end
$var reg 1 ` dec_shift_ror $end
$var reg 1 a dec_shift_rrx $end
$var reg 5 b dec_shift_val[4:0] $end
$var reg 1 c dec_cy $end
$var reg 1 d dec_comp_op1 $end
$var reg 1 e dec_comp_op2 $end
$var reg 1 f dec_alu_cy $end
$var reg 2 g dec_alu_cmd[1:0] $end
$var reg 32 h exe_res[31:0] $end
$var reg 1 i exe_c $end
$var reg 1 j exe_v $end
$var reg 1 k exe_n $end
$var reg 1 l exe_z $end
$var reg 4 m exe_dest[3:0] $end
$var reg 1 n exe_wb $end
$var reg 1 o exe_flag_wb $end
$var reg 32 p exe_mem_adr[31:0] $end
$var reg 32 q exe_mem_data[31:0] $end
$var reg 4 r exe_mem_dest[3:0] $end
$var reg 1 s exe_mem_lw $end
$var reg 1 t exe_mem_lb $end
$var reg 1 u exe_mem_sw $end
$var reg 1 v exe_mem_sb $end
$var reg 1 w exe2mem_empty $end
$var reg 1 x mem_pop $end
$var reg 1 y ck $end
$var reg 1 z reset_n $end
$var reg 1 { vdd $end
$var reg 1 | vss $end
$var reg 1 } shift_c $end
$var reg 1 !" alu_c $end
$var reg 32 "" op2[31:0] $end
$var reg 32 #" op2_shift[31:0] $end
$var reg 32 $" op1[31:0] $end
$var reg 32 %" alu_res[31:0] $end
$var reg 32 &" res_reg[31:0] $end
$var reg 32 '" mem_adr[31:0] $end
$var reg 1 (" exe_push $end
$var reg 1 )" exe2mem_full $end
$var reg 1 *" mem_acces $end
$scope module shifter_inst $end
$var reg 1 +" shift_lsl $end
$var reg 1 ," shift_lsr $end
$var reg 1 -" shift_asr $end
$var reg 1 ." shift_ror $end
$var reg 1 /" shift_rrx $end
$var reg 5 0" shift_val[4:0] $end
$var reg 32 1" din[31:0] $end
$var reg 1 2" cin $end
$var reg 32 3" dout[31:0] $end
$var reg 1 4" cout $end
$var reg 1 5" vdd $end
$var reg 1 6" vss $end
$var reg 32 7" out_lsl[31:0] $end
$var reg 32 8" out_lsr[31:0] $end
$var reg 32 9" out_asr[31:0] $end
$var reg 1 :" coutlsl $end
$var reg 1 ;" coutlsr $end
$var reg 1 <" coutasr $end
$scope module lsl_inst $end
$var reg 32 =" din[31:0] $end
$var reg 5 >" shift_val[4:0] $end
$var reg 32 ?" dout[31:0] $end
$var reg 1 @" cout $end
$var reg 1 A" vdd $end
$var reg 1 B" vss $end
$upscope $end
$scope module lsr_inst $end
$var reg 32 C" din[31:0] $end
$var reg 5 D" shift_val[4:0] $end
$var reg 32 E" dout[31:0] $end
$var reg 1 F" cout $end
$var reg 1 G" vdd $end
$var reg 1 H" vss $end
$upscope $end
$scope module asr_inst $end
$var reg 32 I" din[31:0] $end
$var reg 5 J" shift_val[4:0] $end
$var reg 32 K" dout[31:0] $end
$var reg 1 L" cout $end
$var reg 1 M" vdd $end
$var reg 1 N" vss $end
$upscope $end
$upscope $end
$scope module alu_inst $end
$var reg 32 O" op1[31:0] $end
$var reg 32 P" op2[31:0] $end
$var reg 1 Q" cin $end
$var reg 2 R" cmd[1:0] $end
$var reg 32 S" res[31:0] $end
$var reg 1 T" cout $end
$var reg 1 U" n $end
$var reg 1 V" z $end
$var reg 1 W" v $end
$var reg 1 X" vdd $end
$var reg 1 Y" vss $end
$var reg 32 Z" s[31:0] $end
$var reg 1 [" carryo $end
$scope module add $end
$var reg 32 \" a[31:0] $end
$var reg 32 ]" b[31:0] $end
$var reg 1 ^" cin $end
$var reg 32 _" s[31:0] $end
$var reg 1 `" cout $end
$var reg 9 a" carry[8:0] $end
$scope module (0) $end
$scope module add4_inst $end
$var reg 4 b" a[3:0] $end
$var reg 4 c" b[3:0] $end
$var reg 1 d" cin $end
$var reg 4 e" s[3:0] $end
$var reg 1 f" cout $end
$var reg 5 g" carry[4:0] $end
$scope module (0) $end
$scope module adder1_inst $end
$var reg 1 h" a $end
$var reg 1 i" b $end
$var reg 1 j" cin $end
$var reg 1 k" s $end
$var reg 1 l" cout $end
$upscope $end
$upscope $end
$scope module (1) $end
$scope module adder1_inst $end
$var reg 1 m" a $end
$var reg 1 n" b $end
$var reg 1 o" cin $end
$var reg 1 p" s $end
$var reg 1 q" cout $end
$upscope $end
$upscope $end
$scope module (2) $end
$scope module adder1_inst $end
$var reg 1 r" a $end
$var reg 1 s" b $end
$var reg 1 t" cin $end
$var reg 1 u" s $end
$var reg 1 v" cout $end
$upscope $end
$upscope $end
$scope module (3) $end
$scope module adder1_inst $end
$var reg 1 w" a $end
$var reg 1 x" b $end
$var reg 1 y" cin $end
$var reg 1 z" s $end
$var reg 1 {" cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module (1) $end
$scope module add4_inst $end
$var reg 4 |" a[3:0] $end
$var reg 4 }" b[3:0] $end
$var reg 1 !# cin $end
$var reg 4 "# s[3:0] $end
$var reg 1 ## cout $end
$var reg 5 $# carry[4:0] $end
$scope module (0) $end
$scope module adder1_inst $end
$var reg 1 %# a $end
$var reg 1 &# b $end
$var reg 1 '# cin $end
$var reg 1 (# s $end
$var reg 1 )# cout $end
$upscope $end
$upscope $end
$scope module (1) $end
$scope module adder1_inst $end
$var reg 1 *# a $end
$var reg 1 +# b $end
$var reg 1 ,# cin $end
$var reg 1 -# s $end
$var reg 1 .# cout $end
$upscope $end
$upscope $end
$scope module (2) $end
$scope module adder1_inst $end
$var reg 1 /# a $end
$var reg 1 0# b $end
$var reg 1 1# cin $end
$var reg 1 2# s $end
$var reg 1 3# cout $end
$upscope $end
$upscope $end
$scope module (3) $end
$scope module adder1_inst $end
$var reg 1 4# a $end
$var reg 1 5# b $end
$var reg 1 6# cin $end
$var reg 1 7# s $end
$var reg 1 8# cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module (2) $end
$scope module add4_inst $end
$var reg 4 9# a[3:0] $end
$var reg 4 :# b[3:0] $end
$var reg 1 ;# cin $end
$var reg 4 <# s[3:0] $end
$var reg 1 =# cout $end
$var reg 5 ># carry[4:0] $end
$scope module (0) $end
$scope module adder1_inst $end
$var reg 1 ?# a $end
$var reg 1 @# b $end
$var reg 1 A# cin $end
$var reg 1 B# s $end
$var reg 1 C# cout $end
$upscope $end
$upscope $end
$scope module (1) $end
$scope module adder1_inst $end
$var reg 1 D# a $end
$var reg 1 E# b $end
$var reg 1 F# cin $end
$var reg 1 G# s $end
$var reg 1 H# cout $end
$upscope $end
$upscope $end
$scope module (2) $end
$scope module adder1_inst $end
$var reg 1 I# a $end
$var reg 1 J# b $end
$var reg 1 K# cin $end
$var reg 1 L# s $end
$var reg 1 M# cout $end
$upscope $end
$upscope $end
$scope module (3) $end
$scope module adder1_inst $end
$var reg 1 N# a $end
$var reg 1 O# b $end
$var reg 1 P# cin $end
$var reg 1 Q# s $end
$var reg 1 R# cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module (3) $end
$scope module add4_inst $end
$var reg 4 S# a[3:0] $end
$var reg 4 T# b[3:0] $end
$var reg 1 U# cin $end
$var reg 4 V# s[3:0] $end
$var reg 1 W# cout $end
$var reg 5 X# carry[4:0] $end
$scope module (0) $end
$scope module adder1_inst $end
$var reg 1 Y# a $end
$var reg 1 Z# b $end
$var reg 1 [# cin $end
$var reg 1 \# s $end
$var reg 1 ]# cout $end
$upscope $end
$upscope $end
$scope module (1) $end
$scope module adder1_inst $end
$var reg 1 ^# a $end
$var reg 1 _# b $end
$var reg 1 `# cin $end
$var reg 1 a# s $end
$var reg 1 b# cout $end
$upscope $end
$upscope $end
$scope module (2) $end
$scope module adder1_inst $end
$var reg 1 c# a $end
$var reg 1 d# b $end
$var reg 1 e# cin $end
$var reg 1 f# s $end
$var reg 1 g# cout $end
$upscope $end
$upscope $end
$scope module (3) $end
$scope module adder1_inst $end
$var reg 1 h# a $end
$var reg 1 i# b $end
$var reg 1 j# cin $end
$var reg 1 k# s $end
$var reg 1 l# cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module (4) $end
$scope module add4_inst $end
$var reg 4 m# a[3:0] $end
$var reg 4 n# b[3:0] $end
$var reg 1 o# cin $end
$var reg 4 p# s[3:0] $end
$var reg 1 q# cout $end
$var reg 5 r# carry[4:0] $end
$scope module (0) $end
$scope module adder1_inst $end
$var reg 1 s# a $end
$var reg 1 t# b $end
$var reg 1 u# cin $end
$var reg 1 v# s $end
$var reg 1 w# cout $end
$upscope $end
$upscope $end
$scope module (1) $end
$scope module adder1_inst $end
$var reg 1 x# a $end
$var reg 1 y# b $end
$var reg 1 z# cin $end
$var reg 1 {# s $end
$var reg 1 |# cout $end
$upscope $end
$upscope $end
$scope module (2) $end
$scope module adder1_inst $end
$var reg 1 }# a $end
$var reg 1 !$ b $end
$var reg 1 "$ cin $end
$var reg 1 #$ s $end
$var reg 1 $$ cout $end
$upscope $end
$upscope $end
$scope module (3) $end
$scope module adder1_inst $end
$var reg 1 %$ a $end
$var reg 1 &$ b $end
$var reg 1 '$ cin $end
$var reg 1 ($ s $end
$var reg 1 )$ cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module (5) $end
$scope module add4_inst $end
$var reg 4 *$ a[3:0] $end
$var reg 4 +$ b[3:0] $end
$var reg 1 ,$ cin $end
$var reg 4 -$ s[3:0] $end
$var reg 1 .$ cout $end
$var reg 5 /$ carry[4:0] $end
$scope module (0) $end
$scope module adder1_inst $end
$var reg 1 0$ a $end
$var reg 1 1$ b $end
$var reg 1 2$ cin $end
$var reg 1 3$ s $end
$var reg 1 4$ cout $end
$upscope $end
$upscope $end
$scope module (1) $end
$scope module adder1_inst $end
$var reg 1 5$ a $end
$var reg 1 6$ b $end
$var reg 1 7$ cin $end
$var reg 1 8$ s $end
$var reg 1 9$ cout $end
$upscope $end
$upscope $end
$scope module (2) $end
$scope module adder1_inst $end
$var reg 1 :$ a $end
$var reg 1 ;$ b $end
$var reg 1 <$ cin $end
$var reg 1 =$ s $end
$var reg 1 >$ cout $end
$upscope $end
$upscope $end
$scope module (3) $end
$scope module adder1_inst $end
$var reg 1 ?$ a $end
$var reg 1 @$ b $end
$var reg 1 A$ cin $end
$var reg 1 B$ s $end
$var reg 1 C$ cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module (6) $end
$scope module add4_inst $end
$var reg 4 D$ a[3:0] $end
$var reg 4 E$ b[3:0] $end
$var reg 1 F$ cin $end
$var reg 4 G$ s[3:0] $end
$var reg 1 H$ cout $end
$var reg 5 I$ carry[4:0] $end
$scope module (0) $end
$scope module adder1_inst $end
$var reg 1 J$ a $end
$var reg 1 K$ b $end
$var reg 1 L$ cin $end
$var reg 1 M$ s $end
$var reg 1 N$ cout $end
$upscope $end
$upscope $end
$scope module (1) $end
$scope module adder1_inst $end
$var reg 1 O$ a $end
$var reg 1 P$ b $end
$var reg 1 Q$ cin $end
$var reg 1 R$ s $end
$var reg 1 S$ cout $end
$upscope $end
$upscope $end
$scope module (2) $end
$scope module adder1_inst $end
$var reg 1 T$ a $end
$var reg 1 U$ b $end
$var reg 1 V$ cin $end
$var reg 1 W$ s $end
$var reg 1 X$ cout $end
$upscope $end
$upscope $end
$scope module (3) $end
$scope module adder1_inst $end
$var reg 1 Y$ a $end
$var reg 1 Z$ b $end
$var reg 1 [$ cin $end
$var reg 1 \$ s $end
$var reg 1 ]$ cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module (7) $end
$scope module add4_inst $end
$var reg 4 ^$ a[3:0] $end
$var reg 4 _$ b[3:0] $end
$var reg 1 `$ cin $end
$var reg 4 a$ s[3:0] $end
$var reg 1 b$ cout $end
$var reg 5 c$ carry[4:0] $end
$scope module (0) $end
$scope module adder1_inst $end
$var reg 1 d$ a $end
$var reg 1 e$ b $end
$var reg 1 f$ cin $end
$var reg 1 g$ s $end
$var reg 1 h$ cout $end
$upscope $end
$upscope $end
$scope module (1) $end
$scope module adder1_inst $end
$var reg 1 i$ a $end
$var reg 1 j$ b $end
$var reg 1 k$ cin $end
$var reg 1 l$ s $end
$var reg 1 m$ cout $end
$upscope $end
$upscope $end
$scope module (2) $end
$scope module adder1_inst $end
$var reg 1 n$ a $end
$var reg 1 o$ b $end
$var reg 1 p$ cin $end
$var reg 1 q$ s $end
$var reg 1 r$ cout $end
$upscope $end
$upscope $end
$scope module (3) $end
$scope module adder1_inst $end
$var reg 1 s$ a $end
$var reg 1 t$ b $end
$var reg 1 u$ cin $end
$var reg 1 v$ s $end
$var reg 1 w$ cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module exec2mem $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
1!
0"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU #
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU $
bUUUU %
U&
U'
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU (
bUUUU )
U*
U+
U,
U-
U.
U/
U0
U1
U2
U3
bUUUUU 4
U5
U6
U7
U8
bUU 9
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU :
0;
0<
0=
0>
bUUUU ?
U@
UA
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU B
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU C
bUUUU D
UE
UF
UG
UH
UI
UJ
0K
0L
1M
0N
1O
0P
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU Q
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU R
bUUUU S
UT
UU
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU V
bUUUU W
UX
UY
UZ
U[
U\
U]
U^
U_
U`
Ua
bUUUUU b
Uc
Ud
Ue
Uf
bUU g
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU h
0i
0j
0k
0l
bUUUU m
Un
Uo
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU p
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU q
bUUUU r
Us
Ut
Uu
Uv
Uw
Ux
0y
0z
1{
0|
0}
U!"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU ""
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU #"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU $"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU %"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU &"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU '"
0("
U)"
U*"
U+"
U,"
U-"
U."
U/"
bUUUUU 0"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 1"
U2"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 3"
04"
15"
06"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 7"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 8"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 9"
0:"
0;"
0<"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU ="
bUUUUU >"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU ?"
0@"
1A"
0B"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU C"
bUUUUU D"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU E"
0F"
1G"
0H"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU I"
bUUUUU J"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU K"
0L"
1M"
0N"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU O"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU P"
UQ"
bUU R"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU S"
UT"
0U"
0V"
0W"
1X"
0Y"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU Z"
U["
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU \"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU ]"
U^"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU _"
U`"
bUUUUUUUUU a"
bUUUU b"
bUUUU c"
Ud"
bUUUU e"
Uf"
bUUUUU g"
Uh"
Ui"
Uj"
Uk"
Ul"
Um"
Un"
Uo"
Up"
Uq"
Ur"
Us"
Ut"
Uu"
Uv"
Uw"
Ux"
Uy"
Uz"
U{"
bUUUU |"
bUUUU }"
U!#
bUUUU "#
U##
bUUUUU $#
U%#
U&#
U'#
U(#
U)#
U*#
U+#
U,#
U-#
U.#
U/#
U0#
U1#
U2#
U3#
U4#
U5#
U6#
U7#
U8#
bUUUU 9#
bUUUU :#
U;#
bUUUU <#
U=#
bUUUUU >#
U?#
U@#
UA#
UB#
UC#
UD#
UE#
UF#
UG#
UH#
UI#
UJ#
UK#
UL#
UM#
UN#
UO#
UP#
UQ#
UR#
bUUUU S#
bUUUU T#
UU#
bUUUU V#
UW#
bUUUUU X#
UY#
UZ#
U[#
U\#
U]#
U^#
U_#
U`#
Ua#
Ub#
Uc#
Ud#
Ue#
Uf#
Ug#
Uh#
Ui#
Uj#
Uk#
Ul#
bUUUU m#
bUUUU n#
Uo#
bUUUU p#
Uq#
bUUUUU r#
Us#
Ut#
Uu#
Uv#
Uw#
Ux#
Uy#
Uz#
U{#
U|#
U}#
U!$
U"$
U#$
U$$
U%$
U&$
U'$
U($
U)$
bUUUU *$
bUUUU +$
U,$
bUUUU -$
U.$
bUUUUU /$
U0$
U1$
U2$
U3$
U4$
U5$
U6$
U7$
U8$
U9$
U:$
U;$
U<$
U=$
U>$
U?$
U@$
UA$
UB$
UC$
bUUUU D$
bUUUU E$
UF$
bUUUU G$
UH$
bUUUUU I$
UJ$
UK$
UL$
UM$
UN$
UO$
UP$
UQ$
UR$
US$
UT$
UU$
UV$
UW$
UX$
UY$
UZ$
U[$
U\$
U]$
bUUUU ^$
bUUUU _$
U`$
bUUUU a$
Ub$
bUUUUU c$
Ud$
Ue$
Uf$
Ug$
Uh$
Ui$
Uj$
Uk$
Ul$
Um$
Un$
Uo$
Up$
Uq$
Ur$
Us$
Ut$
Uu$
Uv$
Uw$
#10000000
b0000 %
1&
1'
b00000000000000000000000000000000 (
b0000 )
0*
0+
0,
0-
0.
1/
00
01
02
03
b00000 4
05
08
b00 9
U;
b0000 ?
1@
1A
0J
1K
b0000 S
1T
1U
b00000000000000000000000000000000 V
b0000 W
0X
0Y
0Z
0[
0\
1]
0^
0_
0`
0a
b00000 b
0c
0f
b00 g
Ui
b0000 m
1n
1o
0x
1y
1+"
0,"
0-"
0."
0/"
b00000 0"
02"
b00000 >"
b00000 D"
b00000 J"
0Q"
b00 R"
0^"
bUUUUUUUU0 a"
0d"
bUUUU0 g"
0j"
#20000000
0K
0y
#30000000
06
07
1K
0d
0e
1y
#40000000
b00010000000000000111000000000001 #
b00000000000000000001001000010000 $
0K
b00010000000000000111000000000001 Q
b00000000000000000001001000010000 R
0y
b00010000000000000111000000000001 $"
b00000000000000000001001000010000 1"
b00000000000000000001001000010000 7"
b00000000000000000001001000010000 8"
b00000000000000000001001000010000 9"
b00000000000000000001001000010000 ="
b00000000000000000001001000010000 ?"
b00000000000000000001001000010000 C"
b00000000000000000001001000010000 E"
b00000000000000000001001000010000 I"
b00000000000000000001001000010000 K"
b00010000000000000111000000000001 O"
b00010000000000000111000000000001 \"
b0001 b"
1h"
0m"
0r"
0w"
b0000 |"
0%#
0*#
0/#
04#
b0000 9#
0?#
0D#
0I#
0N#
b0111 S#
1Y#
1^#
1c#
0h#
b0000 m#
0s#
0x#
0}#
0%$
b0000 *$
00$
05$
0:$
0?$
b0000 D$
0J$
0O$
0T$
0Y$
b0001 ^$
1d$
0i$
0n$
0s$
#50000000
0/
b00010000000000001000001000010001 :
0;
1K
0]
b00010000000000001000001000010001 h
0i
1y
0!"
b00000000000000000001001000010000 ""
b00000000000000000001001000010000 #"
b00010000000000001000001000010001 %"
b00010000000000001000001000010001 '"
0+"
b00000000000000000001001000010000 3"
b00000000000000000001001000010000 P"
b00010000000000001000001000010001 S"
0T"
b00010000000000001000001000010001 Z"
0["
b00000000000000000001001000010000 ]"
b00010000000000001000001000010001 _"
0`"
b000000000 a"
b0000 c"
b0001 e"
0f"
b00000 g"
0i"
1k"
0l"
0n"
0o"
0p"
0q"
0s"
0t"
0u"
0v"
0x"
0y"
0z"
0{"
b0001 }"
0!#
b0001 "#
0##
b00000 $#
1&#
0'#
1(#
0)#
0+#
0,#
0-#
0.#
00#
01#
02#
03#
05#
06#
07#
08#
b0010 :#
0;#
b0010 <#
0=#
b00000 >#
0@#
0A#
0B#
0C#
1E#
0F#
1G#
0H#
0J#
0K#
0L#
0M#
0O#
0P#
0Q#
0R#
b0001 T#
0U#
b1000 V#
0W#
b01110 X#
1Z#
0[#
0\#
1]#
0_#
1`#
0a#
1b#
0d#
1e#
0f#
1g#
0i#
1j#
1k#
0l#
b0000 n#
0o#
b0000 p#
0q#
b00000 r#
0t#
0u#
0v#
0w#
0y#
0z#
0{#
0|#
0!$
0"$
0#$
0$$
0&$
0'$
0($
0)$
b0000 +$
0,$
b0000 -$
0.$
b00000 /$
01$
02$
03$
04$
06$
07$
08$
09$
0;$
0<$
0=$
0>$
0@$
0A$
0B$
0C$
b0000 E$
0F$
b0000 G$
0H$
b00000 I$
0K$
0L$
0M$
0N$
0P$
0Q$
0R$
0S$
0U$
0V$
0W$
0X$
0Z$
0[$
0\$
0]$
b0000 _$
0`$
b0001 a$
0b$
b00000 c$
0e$
0f$
1g$
0h$
0j$
0k$
0l$
0m$
0o$
0p$
0q$
0r$
0t$
0u$
0v$
0w$
#60000000
0K
0y
#70000000
1K
1y
#80000000
0K
0y
#90000000
1K
1y
#100000000
0K
0y
#110000000
1K
1y
#120000000
0K
0y
#130000000
1K
1y
#140000000
0K
0y
#150000000
1K
1y
#160000000
0K
0y
#170000000
1K
1y
#180000000
0K
0y
#190000000
1K
1y
#200000000
0K
0y
#210000000
1K
1y
#220000000
0K
0y
#230000000
1K
1y
#240000000
0K
0y
#250000000
1K
1y
#260000000
0K
0y
#270000000
1K
1y
#280000000
0K
0y
#290000000
1K
1y
#300000000
0K
0y
#310000000
1K
1y
#320000000
0K
0y
#330000000
1K
1y
#340000000
0K
0y
#350000000
1K
1y
#360000000
0K
0y
#370000000
1K
1y
#380000000
0K
0y
#390000000
1K
1y
#400000000
0K
0y
#410000000
1K
1y
#420000000
0K
0y
#430000000
1K
1y
#440000000
0K
0y
#450000000
1K
1y
#460000000
0K
0y
#470000000
1K
1y
#480000000
0K
0y
#490000000
1K
1y
#500000000
0K
0y
#510000000
1K
1y
#520000000
0K
0y
#530000000
1K
1y
#540000000
0K
0y
#550000000
1K
1y
#560000000
0K
0y
#570000000
1K
1y
#580000000
0K
0y
#590000000
1K
1y
#600000000
0K
0y
#610000000
1K
1y
#620000000
0K
0y
#630000000
1K
1y
#640000000
0K
0y
#650000000
1K
1y
#660000000
0K
0y
#670000000
1K
1y
#680000000
0K
0y
#690000000
1K
1y
#700000000
0K
0y
#710000000
1K
1y
#720000000
0K
0y
#730000000
1K
1y
#740000000
0K
0y
#750000000
1K
1y
#760000000
0K
0y
#770000000
1K
1y
#780000000
0K
0y
#790000000
1K
1y
#800000000
0K
0y
#810000000
1K
1y
#820000000
0K
0y
#830000000
1K
1y
#840000000
0K
0y
#850000000
1K
1y
#860000000
0K
0y
#870000000
1K
1y
#880000000
0K
0y
#890000000
1K
1y
#900000000
0K
0y
#910000000
1K
1y
#920000000
0K
0y
#930000000
1K
1y
#940000000
0K
0y
#950000000
1K
1y
#960000000
0K
0y
#970000000
1K
1y
#980000000
0K
0y
#990000000
1K
1y
#1000000000
0K
0y
#1010000000
1K
1y
#1020000000
0K
0y
#1030000000
1K
1y
#1040000000
0K
0y
#1050000000
1K
1y
#1060000000
0K
0y
#1070000000
1K
1y
#1080000000
0K
0y
#1090000000
1K
1y
#1100000000
0K
0y
#1110000000
1K
1y
#1120000000
0K
0y
#1130000000
1K
1y
#1140000000
0K
0y
#1150000000
1K
1y
#1160000000
0K
0y
#1170000000
1K
1y
#1180000000
0K
0y
#1190000000
1K
1y
#1200000000
0K
0y
#1210000000
1K
1y
#1220000000
0K
0y
#1230000000
1K
1y
#1240000000
0K
0y
#1250000000
1K
1y
#1260000000
0K
0y
#1270000000
1K
1y
#1280000000
0K
0y
#1290000000
1K
1y
#1300000000
0K
0y
#1310000000
1K
1y
#1320000000
0K
0y
#1330000000
1K
1y
#1340000000
0K
0y
#1350000000
1K
1y
#1360000000
0K
0y
#1370000000
1K
1y
#1380000000
0K
0y
#1390000000
1K
1y
#1400000000
0K
0y
#1410000000
1K
1y
#1420000000
0K
0y
#1430000000
1K
1y
#1440000000
0K
0y
#1450000000
1K
1y
#1460000000
0K
0y
#1470000000
1K
1y
#1480000000
0K
0y
#1490000000
1K
1y
#1500000000
0K
0y
#1510000000
1K
1y
#1520000000
0K
0y
#1530000000
1K
1y
#1540000000
0K
0y
#1550000000
1K
1y
#1560000000
0K
0y
#1570000000
1K
1y
#1580000000
0K
0y
#1590000000
1K
1y
#1600000000
0K
0y
#1610000000
1K
1y
#1620000000
0K
0y
#1630000000
1K
1y
#1640000000
0K
0y
#1650000000
1K
1y
#1660000000
0K
0y
#1670000000
1K
1y
#1680000000
0K
0y
#1690000000
1K
1y
#1700000000
0K
0y
#1710000000
1K
1y
#1720000000
0K
0y
#1730000000
1K
1y
#1740000000
0K
0y
#1750000000
1K
1y
#1760000000
0K
0y
#1770000000
1K
1y
#1780000000
0K
0y
#1790000000
1K
1y
#1800000000
0K
0y
#1810000000
1K
1y
#1820000000
0K
0y
#1830000000
1K
1y
#1840000000
0K
0y
#1850000000
1K
1y
#1860000000
0K
0y
#1870000000
1K
1y
#1880000000
0K
0y
#1890000000
1K
1y
#1900000000
0K
0y
#1910000000
1K
1y
#1920000000
0K
0y
#1930000000
1K
1y
#1940000000
0K
0y
#1950000000
1K
1y
#1960000000
0K
0y
#1970000000
1K
1y
#1980000000
0K
0y
#1990000000
1K
1y
#2000000000
1L
1z
